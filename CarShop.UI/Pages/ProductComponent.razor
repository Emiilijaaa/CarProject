@using CarShop.UI.Storage.Services

@inject I﻿StorageService Storage
<section class="d-flex mx-3 mx-auto mt-5 ">
    <div class="card" style="width: 30rem;">
        <img src="@Car.PictureURL" class="img-fluid start" alt="...">
        <h5 class="card-title">@Car.Brand.Name</h5>
        <p class="card-text">@Car.Description</p>
        <a href="#" class="btn btn-dark mt-5">Köp nu</a>
        <div class="">
    
        <div class="d-flex card-footer bg-white g-0 justify-content-bewtween">
        </div>

     @if (Car.Colors!.Count > 0)
            {

                @foreach (var color in Car.Colors)
                {
                    <div class="btn-group mx-2" role="group" aria-label="Basic radio toggle button group">
                        <input type="radio" class="btn-check" name="color-@Car.Id-@color.Id" id="color-@Car.Id-@color.Id"
                               autocomplete="off" @onclick="() => OnColorClick(color)">
                        <label class="btn btn-sm btn-outline-dark rounded-circle"
                               style="background-color:#@color.BGColor; color:#@(color.IsSelected ? color.TextColor : color.BGColor)"
                               for="color-@Car.Id-@color.Id"><i class="bi-check"></i></label>
                    @* <button class="btn btn-sm btn-dark" @onclick="() => SavedCars(Car)"><i class="bi bi-bookmark"></i></button> *@

                </div>
                }
            }
            <button class="btn btn-sm btn-dark" @onclick="() => SavedCars(Car)"><i class="bi bi-bookmark"></i></button>

    </div>
    </div>                         
</section>

@code {

    [Parameter] public CarGetDTO Car { get; set; }

    void OnColorClick(ColorGetDTO color)
    {
        Car.Colors!.ForEach(c => c.IsSelected = false);
        color.IsSelected = true;
    }


    async Task SavedCars(CarGetDTO car)
    {
       await Storage.SetAsync("MyKey", car);
    }
}

